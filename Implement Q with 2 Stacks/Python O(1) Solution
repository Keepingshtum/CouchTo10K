from collections import deque



class MyQueue:

    def __init__(self):
        self.stack1 = deque()
        self.stack2 = deque()
        self.isEmpty = True
        self.front = None

    def push(self, x: int) -> None:
        #push to stack 1
        self.stack1.append(x)
        if(self.isEmpty): 
            self.isEmpty = False
            self.front = x
    
    def pop(self) -> int:
        #pop stack1 and push to stack2 once all elems pushed,pop stack2
        if len(self.stack2) == 0:
            while len(self.stack1)>0:
                self.stack2.append(self.stack1.pop())
        if len(self.stack2) == 1: self.isEmpty = True
        popped = self.stack2.pop()
        
        if len(self.stack2)>0:
            self.front = self.stack2[-1]
        elif len(self.stack1)>0:
            self.front = self.stack1[0]
        else:
            self.front = None
        return popped
    
    def peek(self) -> int:
        return self.front

    def empty(self) -> bool:
        return self.isEmpty
        
# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
